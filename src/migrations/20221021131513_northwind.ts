import { Knex } from 'knex'

export async function up(knex: Knex): Promise<void> {
    return await knex.schema
        .withSchema('northwind')
        .createTable('categories', (table) => {
            table.integer('CategoryID').primary()
            table.string('CategoryName')
            table.string('Description')
        })
        .createTable('customers', (table) => {
            table.string('CustomerID').primary()
            table.string('CompanyName')
            table.string('ContactName')
            table.string('ContactTitle')
            table.string('Address')
            table.string('City')
            table.string('Region')
            table.string('PostalCode')
            table.string('Country')
            table.string('Phone')
            table.string('Fax')
        })
        .createTable('employees', (table) => {
            table.integer('EmployeeID').primary()
            table.string('LastName')
            table.string('FirstName')
            table.string('Title')
            table.string('TitleOfCourtesy')
            table.string('BirthDate')
            table.string('HireDate')
            table.string('Address')
            table.string('City')
            table.string('Region')
            table.string('PostalCode')
            table.string('Country')
            table.string('HomePhone')
            table.integer('Extension')
            table.text('Notes')
            table.string('ReportsTo').references('EmployeeID').inTable('northwind.employees')
        })
        .createTable('employeesterritories', (table) => {
            table.increments('id')
            table.integer('EmployeeID').references('EmployeeID').inTable('northwind.employees')
            table.integer('TerritoryID').references('TerritoryID').inTable('northwind.territories')
        })
        .createTable('orderdetails', (table) => {
            table.increments('id')
            table.integer('OrderID').references('OrderID').inTable('northwind.orders')
            table.integer('ProductID').references('ProductID').inTable('northwind.products')
            table.decimal('UnitPrice')
            table.integer('Quantity')
            table.decimal('Discount')
        })
        .createTable('orders', (table) => {
            table.integer('OrderID').primary()
            table.string('CustomerID').references('CustomerID').inTable('northwind.customers')
            table.integer('EmployeeID').references('EmployeeID').inTable('northwind.employees')
            table.string('OrderDate')
            table.string('RequiredDate')
            table.string('ShippedDate')
            table.integer('ShipVia').references('ShipperID').inTable('northwind.shippers')
            table.decimal('Freight')
            table.string('ShipName')
            table.string('ShipAddress')
            table.string('ShipCity')
            table.string('ShipRegion')
            table.string('ShipPostalCode')
            table.string('ShipCountry')
        })
        .createTable('products', (table) => {
            table.string('ProductID').primary()
            table.string('ProductName')
            table.string('SupplierID').references('SupplierID').inTable('northwind.suppliers')
            table.integer('CategoryID').references('CategoryID').inTable('northwind.categories')
            table.string('QuantityPerUnit')
            table.decimal('UnitPrice')
            table.integer('UnitsInStock')
            table.integer('UnitsOnOrder')
            table.integer('ReorderLevel')
            table.integer('Discontinued')
        })
        .createTable('regions', (table) => {
            table.integer('RegionID').primary()
            table.string('RegionDescription')
        })
        .createTable('shippers', (table) => {
            table.integer('ShipperID').primary()
            table.string('CompanyName')
            table.string('Phone')
        })
        .createTable('suppliers', (table) => {
            table.integer('SupplierID').primary()
            table.string('CompanyName')
            table.string('ContactName')
            table.string('ContactTitle')
            table.string('Address')
            table.string('City')
            table.string('Region')
            table.string('PostalCode')
            table.string('Country')
            table.string('Phone')
            table.string('Fax')
            table.string('HomePage')
        })
        .createTable('territories', (table) => {
            table.string('TerritoryID').primary()
            table.string('TerritoryDescription')
            table.string('RegionID')
        })
}

export async function down(knex: Knex): Promise<void> {
    return await knex.schema
        .withSchema('northwind')
        .dropTableIfExists('categories')
        .dropTableIfExists('orders')
        .dropTableIfExists('customers')
        .dropTableIfExists('employees')
        .dropTableIfExists('products')
        .dropTableIfExists('suppliers')
        .dropTableIfExists('orderdetails')
        .dropTableIfExists('regions')
        .dropTableIfExists('shippers')
        .dropTableIfExists('territories')
}
